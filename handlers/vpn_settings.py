import html
import json
from aiogram import Router, F
from aiogram.types import CallbackQuery, BufferedInputFile, InlineKeyboardMarkup, InlineKeyboardButton

from database.crud import get_user_by_tg
from keyboards.main import back_button
from utils.vless import ensure_vless_profile

router = Router()

VPN_SETTINGS_KEYBOARD = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üîê –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="create_vless_profile")],
        [InlineKeyboardButton(text="–î–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞ üì±", callback_data="Phone")],
        [InlineKeyboardButton(text="–î–ª—è –ü–ö üíª", callback_data="PC")],
        [InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô", callback_data="back_button")],
    ]
)

PROFILE_RESULT_KEYBOARD = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="create_vless_profile")],
        [InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô", callback_data="back_button")],
    ]
)


@router.callback_query(F.data == "settings")
async def settings_handler(callback: CallbackQuery):
    await callback.message.edit_text(
        """
‚öôÔ∏è –ü–æ–¥–∫–ª—é—á–∏—Ç—å VPN

–ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π VLESS –∫–ª—é—á. –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª—é—á–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –¥–ª—è —Å–≤–æ–µ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã.
""",
        reply_markup=VPN_SETTINGS_KEYBOARD,
    )


@router.callback_query(F.data == "create_vless_profile")
async def create_vless_profile(callback: CallbackQuery):
    user = await get_user_by_tg(callback.from_user.id)
    if not user:
        await callback.answer("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
        return

    profile, created, synced, error = await ensure_vless_profile(user, force=True)

    status_line = "–ü—Ä–æ—Ñ–∏–ª—å —Å–æ–∑–¥–∞–Ω." if created else "–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω."
    sync_line = "‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø–∞–Ω–µ–ª—å—é." if synced else "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —Å –ø–∞–Ω–µ–ª—å—é."

    details = [
        "üîê –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å FaceVPN –≥–æ—Ç–æ–≤!",
        status_line,
        "",
        f"UID: <code>{profile.uuid}</code>",
        f"–°–µ—Ä–≤–µ—Ä: <code>{profile.server}</code>",
        f"–ü–æ—Ä—Ç: <code>{profile.port}</code>",
        f"–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: <code>{profile.security}</code>",
        f"–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: <code>{profile.transport}</code>",
    ]

    if profile.sni:
        details.append(f"SNI/Host: <code>{profile.sni}</code>")
    if profile.path:
        details.append(f"–ü—É—Ç—å: <code>{profile.path}</code>")
    if profile.flow:
        details.append(f"Flow: <code>{profile.flow}</code>")

    details.extend([
        "",
        "–°—Å—ã–ª–∫–∞ –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞:",
        f"<code>{profile.build_uri()}</code>",
        "",
        sync_line,
    ])

    if error and not synced:
        details.append(f"–°–æ–æ–±—â–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞: <code>{html.escape(error)}</code>")

    await callback.message.edit_text(
        "\n".join(details),
        reply_markup=PROFILE_RESULT_KEYBOARD,
    )

    nekobox_payload = profile.to_nekobox_profile()
    json_payload = json.dumps(nekobox_payload, ensure_ascii=False, indent=2)
    document = BufferedInputFile(
        json_payload.encode("utf-8"),
        filename=f"{profile.uuid}_vless_profile.json",
    )
    await callback.message.answer_document(
        document,
        caption="JSON –ø—Ä–æ—Ñ–∏–ª—å –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ Nekobox/V2Ray.",
    )
    await callback.answer()


@router.callback_query(F.data == "Phone")
async def phone_handler(callback: CallbackQuery):
    await callback.message.edit_text(
        """
1Ô∏è‚É£ –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ VPN üì±
2Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á —Å–µ—Ä–≤–µ—Ä–∞ üîë
3Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –∏ –≤–∫–ª—é—á–∏—Ç–µ VPN""",
        reply_markup=back_button,
    )


@router.callback_query(F.data == "PC")
async def pc_handler(callback: CallbackQuery):
    await callback.message.edit_text(
        """
1Ô∏è‚É£ –°–∫–∞—á–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ VPN üíª
2Ô∏è‚É£ –í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ –∫–ª—é—á üîë
3Ô∏è‚É£ –í—Å—Ç–∞–≤—å—Ç–µ –∫–ª—é—á –∏ –≤–∫–ª—é—á–∏—Ç–µ VPN""",
        reply_markup=back_button,
    )
